---
title: "Data Cleaning"
format: html
editor: visual
---

```{r}
#packages

library(tidyverse)
#library(readxl) #only for reading the other countries data
```

```{r}
#cleaned data

#wvs_country <- read_csv("cleaned-data/wave_7_countries.csv")
#wvs_country_simplified <- read_csv("cleaned-data/wvs_country_simplified.csv")
#wvs_country_averages <- read_csv("cleaned-data/wvs_country_averages.csv")
#country_prisons <- read_csv("cleaned-data/country_prisons.csv")

#countries_for_analysis <- read_csv("cleaned-data/countries_for_analysis.csv")
```

# World Values Survey

These data are sourced from the [World Values Survey Wave 7 (2017-2022)](https://www.worldvaluessurvey.org/WVSDocumentationWV7.jsp), accessed March 26, 2023.

```{r}
wvs_raw <- read_csv("../WVS_Wave7.csv")
```

```{r}
head(wvs_raw)
```

First, we need to select only the nine countries analyzed by Jacobson (2017). These are those countries and their WVS Country Codes:

-   Kenya (404)
-   South Africa (710)
-   Brazil (76)
-   the United States (840)
-   India (356)
-   Thailand (764)
-   England and Wales (Great Britain, 826)
-   Hungary (348)
-   the Netherlands (528)
-   Australia (36)

Now, let's filter for `B_COUNTRY` values that match these codes. Unfortunately, I encountered an error in which it WON'T FILTER "OR" VALUES WHICH IS EVIL. So to solve that, I've made different dataframes for each country and combined them.

```{r}
# creating data frames for each country

wvs_kenya <- wvs_raw %>% 
  filter(B_COUNTRY == 404) #filter by country code

wvs_safrica <- wvs_raw %>% 
  filter(B_COUNTRY == 710)

wvs_brazil <- wvs_raw %>% 
  filter(B_COUNTRY == 76)

wvs_us <- wvs_raw %>% 
  filter(B_COUNTRY == 840)

wvs_india <- wvs_raw %>% 
  filter(B_COUNTRY == 356)

wvs_thailand <- wvs_raw %>% 
  filter(B_COUNTRY == 764)

wvs_britain <- wvs_raw %>% 
  filter(B_COUNTRY == 826)

wvs_hungary <- wvs_raw %>% 
  filter(B_COUNTRY == 348)

wvs_netherlands <- wvs_raw %>% 
  filter(B_COUNTRY == 528)

wvs_australia <- wvs_raw %>% 
  filter(B_COUNTRY == 36)
```

Looking at the observations from these dataframes, it appears that Hungary, India, and South Africa do not have results from the WVS Wave 7.

Here is the code for reading in the other countires (not to be executed rn)

```{r}
wvs_hungary <- read_xlsx("raw-data/WV5_Hungary.xlsx")
wvs_india <- read_xlsx("raw-data/WV6_India.xlsx")
wvs_safrica <- read_xlsx("raw-data/WV6_South_Africa.xlsx")
```

Before things get complicated, let's save these files so that next time we don't have to download and read the entire wave 7.

```{r}
# join the separate country dataframes from wave 7

wvs_country <- wvs_kenya %>% 
  full_join(wvs_brazil) %>% 
  full_join(wvs_us) %>% 
  full_join(wvs_thailand) %>% 
  full_join(wvs_britain) %>% 
  full_join(wvs_netherlands) %>% 
  full_join(wvs_australia)

write.csv(wvs_country, "cleaned-data/wave_7_countries.csv")
```

# Averages

First, I want to remove variables that I definitely don't want to use

```{r}
colnames(wvs_country)

wvs_country_simplified <- wvs_country %>% 
  select(-version,
         -doi,
         -A_WAVE,
         -A_YEAR,
         -A_STUDY,
         -C_COW_NUM,
         -C_COW_ALPHA,
         -D_INTERVIEW,
         -S007,
         -J_INTDATE,
         -FW_END,
         -FW_START,
         -K_TIME_START,
         -K_TIME_END,
         -K_DURATION,
         -Q_MODE,
         -N_REGION_ISO,
         -N_REGION_WVS,
         -N_REGION_NUTS2,
         -reg_nuts1,
         -N_TOWN,
         -G_TOWNSIZE,
         -G_TOWNSIZE2,
         -H_SETTLEMENT,
         -H_URBRURAL,
         -L_INTERVIEWER_NUMBER,
         -I_PSU,
         -O1_LONGITUDE,
         -O2_LATITUDE,
         -S_INTLANGUAGE,
         -LNGE_ISO,
         -E_RESPINT,
         -F_INTPRIVACY,
         -E1_LITERACY,
         -W_WEIGHT,
         -S018,
         -S025,
         -Q33, -Q33_3,
         -Q34, -Q34_3,
         -Q35, -Q35_3,
         -Q82, -Q82_AFRICANUNION, -Q82_APEC, -Q82_ARABLEAGUE, -Q82_ASEAN, -Q82_CIS, -Q82_CUSMA, -Q82_ECO, -Q82_EU, -Q82_GULFCOOP, -Q82_ISLCOOP, -Q82_MERCOSUR, -Q82_NAFTA, -Q82_OAS, -Q82_SAARC, -Q82_SCO, -Q82_TLC, -Q82_UNDP, 
         -Q223, -Q223_ABREV, -Q223_LOCAL,
         -X003R, -X003R2,
         -Q264, -V002, -Q265, -V001,
         -Q266,- X002_02B, -Q267, -V002A_01, -Q268, -V001A_01)

wvs_country_simplified <- wvs_country_simplified[1:342]

write_csv(wvs_country_simplified, "cleaned-data/wvs_country_simplified.csv")
```

Now, let's try to find averages for each question for each country

```{r}
wvs_country_averages <- wvs_country_simplified %>% 
  group_by(B_COUNTRY, B_COUNTRY_ALPHA) %>% 
  summarise(across(everything(), mean))

write_csv(wvs_country_averages, "cleaned-data/wvs_country_averages.csv")
```

# Combining with prison data

The countries are

```{r}
as.list(wvs_country_averages[2])

country_prisons <- data.frame(B_COUNTRY_ALPHA = c("AUS", "BRA", "KEN", "NLD", "THA", "GBR", "USA"),
                              prison_rate = c(158, 389, 107, 66, 377, 140, 531),
                              prison_total = c(41155, 835643, 58887, 11623, 262319, 84372, 1767200))

write_csv(country_prisons, "cleaned-data/country_prisons.csv")

countries_for_analysis <- country_prisons %>% full_join(
  wvs_country_averages,
  by="B_COUNTRY_ALPHA"
)

write.csv(countries_for_analysis, "cleaned-data/countries_for_analysis.csv")
```

# Creating one simple linear regression

Now that we have a data frame like this, we can work on creating simple linear regressions.

First of all, as a trial run I'm going to compare Q17 (importance of raising children to be obedient) to the prison rate.

```{r}
countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, Q17, prison_rate) %>% 
  ggplot(aes(x = Q17, y = prison_rate)) +
  geom_point()
```

```{r}
#summarize the linear model
summary(lm(prison_rate~Q17, data=countries_for_analysis))

#extract the p value
summary(lm(prison_rate~Q17, data=countries_for_analysis))$coefficients[2,4]
```

There is a non-statistically significant positive relationship, with a p-value of 0.607.

# create a function

```{r}
which(colnames(countries_for_analysis)=="Q17")
countries_for_analysis[22]
summary(lm(as.formula("prison_rate~Q17"), data=countries_for_analysis))

x_var <- "Q17"
summary(lm((paste("prison_rate ~", as.character(x_var))), data=countries_for_analysis))

lm_summary <- function(x_var){
  summary(lm((paste("prison_rate ~", as.character(x_var))), data=countries_for_analysis))
}

lm_summary("Q17")


```

```{r}
extract_pvalue <- function(x_var){
  summary(lm((paste("prison_rate ~", as.character(x_var))), data=countries_for_analysis))$coefficients[2,4]
}
```

testing function

```{r}
extract_pvalue("Q17")
```

## using the function

```{r}
#make list of column names as input for function
list_colnames <- colnames(countries_for_analysis)
inputs <- list_colnames[6:344]
inputs <- as.list(inputs)

#run the function to create a dataframe, then pivot the data frame longer
pvalues <- inputs %>% 
  map_dfc(extract_pvalue) %>% 
  pivot_longer(cols = everything(), names_to = "question", values_to = "p_value") %>% 
  filter(p_value <= 0.1) %>% 
  arrange(p_value)
```

Now let's extract the meaningful p_values (\<= 0.1) and find their corresponding questions

```{r}

assign_question <- function(question_index){ # e.g. take "...7" as input
  # gsub("[^[:alnum:] ]", "", "...7") will remove any special strings (eg "...") from "...7" and replace them with "" 
  #then just say as.numeric
  # as.character(inputs[1]) finds the question associated with the first index of the inputs dataframe
  as.character(inputs[as.numeric(gsub("[^[:alnum:] ]", "", question_index))])
}

pvalues %>% 
  mutate(question_string = assign_question(question)) %>% 
  select(question_string, p_value)

pvalues %>% 
  mutate(question_string = assign_question(question)) %>% 
  select(question_string, p_value) %>% 
  filter(question_string != "Q234A")

#note: exvluse 243/Q234A because bad data???
```

Now let's find lm summaries of these most correlated questions

```{r}
lm_summary("Q7")
```

## Question 7 graph

```{r}
countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, Q7) %>% 
ggplot(aes(x = Q7, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = "Incarceration Rate (per 100,000)",
       title = "Good Manners vs. Incarceration Rate", 
       subtitle = "Is it important for children to learn good manners at home?",
       caption = "P-Value of 0.002") +
  scale_x_reverse("Importance of Manners", limits = c(2, 1), breaks = c(1, 2), label = c("Important", "Not Important"))
```

## Question 46 graph

```{r}
countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, Q46) %>% 
ggplot(aes(x = Q46, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = "Incarceration Rate (per 100,000)",
       title = "Happiness vs. Incarceration Rate", 
       subtitle = "Taking all things together, how happy would you say you are?",
       caption = "P-Value of 0.015") +
  scale_x_reverse("Happiness", limits = c(4, 1), breaks = c(1, 2, 3, 4), label = c("Very happy", "Rather happy", "Not very happy","Not at all happy"))

countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, Q46) %>% 
ggplot(aes(x = Q46, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = "Incarceration Rate (per 100,000)",
       title = "Happiness vs. Incarceration Rate", 
       subtitle = "Taking all things together, how happy would you say you are?",
       caption = "P-Value of 0.015") +
  scale_x_reverse("Happiness", limits = c(2, 1), breaks = c(1, 2, 3, 4), label = c("Very happy", "Rather happy", "Not very happy","Not at all happy"))
```

## Question 195 Graph

0.048

```{r}
countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, Q195) %>% 
ggplot(aes(x = Q195, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = "Incarceration Rate (per 100,000)",
       title = "Death Penalty Justification vs. Incarceration Rate", 
       subtitle = "How often do you think the death penalty can be justified?",
       caption = "P-Value of 0.048") +
  scale_x_reverse("Death Penalty Justification", limits = c(10, 1), breaks = c(1, 10), label = c("Never justifiable", "Always justifiable"))
```

# Q234A IGNORE -- NOT STATISTICALLY SIGNIFICANT

p value 0.055652007

```{r}
q234A_data <- countries_for_analysis %>% filter(B_COUNTRY_ALPHA != "THA", B_COUNTRY_ALPHA != "USA")
summary(lm(as.formula("prison_rate~Q234A"), data=q234A_data))
```

```{r}
countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, Q234A) %>% 
ggplot(aes(x = Q234A, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = "Incarceration Rate (per 100,000)",
       title = "Death Penalty Justification vs. Incarceration Rate", 
       subtitle = "How often do you think the death penalty can be justified?",
       caption = "P-Value of 0.056") +
  scale_x_reverse("Death Penalty Justification", limits = c(10, 1), breaks = c(1, 10), label = c("Never justifiable", "Always justifiable"))
```

IGNORE -- NOT STATISTICALLY SIGNIFICANT

## Question 58 graph

```{r}
countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, Q58) %>% 
ggplot(aes(x = Q58, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = "Incarceration Rate (per 100,000)",
       title = "Family Trust vs. Incarceration Rate", 
       subtitle = "How much do you trust people from your family?",
       caption = "P-Value of 0.059") +
  scale_x_reverse("Trust in Your Family", limits = c(4, 1), breaks = c(1, 2, 3, 4), label = c("Trust completely", "Trust somewhat", "Do not trust very much", "Do not trust at all"))

countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, Q58) %>% 
ggplot(aes(x = Q58, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = "Incarceration Rate (per 100,000)",
       title = "Family Trust vs. Incarceration Rate", 
       subtitle = "How much do you trust people from your family?",
       caption = "P-Value of 0.059") +
  scale_x_reverse("Trust in Your Family", breaks = c(1, 2, 3, 4), label = c("Trust completely", "Trust somewhat", "Do not trust very much", "Do not trust at all"))
```

# Q203

p value 0.060173361

```{r}
countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, Q203) %>% 
ggplot(aes(x = Q203, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = "Incarceration Rate (per 100,000)",
       title = "Radio News vs. Incarceration Rate", 
       subtitle = "How often do you obtain information through radio news?",
       caption = "P-Value of 0.060") +
  scale_x_reverse("Radio News Usage", limits = c(5, 1), breaks = c(1, 2, 3, 4, 5), label = c("Daily", "Weekly", "Monthly", "Less than monthly", "Never"))
```

# Q142

p value 0.061714572

```{r}
countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, Q142) %>% 
ggplot(aes(x = Q142, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = "Incarceration Rate (per 100,000)",
       title = "Perceived Job Security vs. Incarceration Rate", 
       subtitle = "To what degree are you worried about losing your job or not finding a job?",
       caption = "P-Value of 0.062") +
  scale_x_reverse("Job Security", limits = c(4, 1), breaks = c(1, 2, 3, 4), label = c("Very much", "A good deal", "Not much", "Not at all"))
```

#Q2

p value 0.088545211

```{r}
countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, Q2) %>% 
ggplot(aes(x = Q2, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = "Incarceration Rate (per 100,000)",
       title = "Importance of Friends vs. Incarceration Rate", 
       subtitle = "How important are friends in your life?",
       caption = "P-Value of 0.089") +
  scale_x_reverse("Importance of Friends", limits = c(4, 1), breaks = c(1, 2, 3, 4), label = c("Very important", "Rather important", "Not very important", "Not at all important"))
```

## Function to make graph

```{r}
make_graph <- function(question_num, x_label, title_phrase, subtitle, p_value, limits, breaks, break_labels, y_label = "Incarceration Rate (per 100,000)"){
  countries_for_analysis %>%
  select(B_COUNTRY_ALPHA, prison_rate, question_num) %>% 
ggplot(aes(x = question_num, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = y_label,
       title = paste(title_phrase, "vs. Incarceration Rate"), 
       subtitle = subtitle,
       caption = paste("P-Value of", as.character(p_value))) +
  scale_x_reverse(y_label, limits = limits, breaks = breaks, label = break_labels)
}

make_graph(question_num="Q46", x_label = "Q46", title_phrase = "Happiness", subtitle = "Taking all things together, how happy would you say you are?", p_value = 0.015, limits = c(1,4), breaks = c(1, 2, 3, 4), break_labels = c("Very happy", "Rather happy", "Not very happy", "Not at all happy"))


make_graph <- function(question_num, x_label, limits, breaks, break_labels, y_label = "Incarceration Rate (per 100,000)"){
  countries_for_analysis %>% 
  select(B_COUNTRY_ALPHA, prison_rate, question_num) %>% 
ggplot(aes(x = question_num, y = prison_rate, label = B_COUNTRY_ALPHA)) +
  geom_point() +
  geom_smooth(method='lm') +
  geom_label() +
  labs(y = y_label) +
  scale_x_reverse(y_label, limits = eval(limits), breaks = eval(breaks), label = eval(break_labels))
}

make_graph(question_num="Q46", x_label = "Q46", limits = c(1,4), breaks = c(1, 2, 3, 4), break_labels = c("Very happy", "Rather happy", "Not very happy", "Not at all happy"))







```

# References

Haerpfer, Christian, Ronald Inglehart, Alejandro Moreno, Christian Welzel, Kseniya Kizilova, Jaime Diez-Medrano, Marta Lagos, Pippa Norris, Eduard Ponarin, and Bi Puranen. 2022. "World Values Survey Wave 7 (2017-2022) Cross-National Data-Set." *World Values Survey*. Retrieved March 26, 2023 (https://www.worldvaluessurvey.org/WVSDocumentationWV7.jsp).

Ingelhart, Ronald, Christian W. Haerpfer, Alejandro Moreno, Christian Welzel, Kseniya Kizilova, Jaime Diez-Medrano, Marta Lagos, Pippa Norris, Eduard Ponarin, and Bi Puranen. 2014. "World Values Survey Wave 6 (2010-2014)." *World Values Survey.* Retrieved March 26, 2023 (https://www.worldvaluessurvey.org/WVSDocumentationWV5.jsp).

Ingelhart, Ronald, Christian W. Haerpfer, Alejandro Moreno, Christian Welzel, Kseniya Kizilova, Jaime Diez-Medrano, Marta Lagos, Pippa Norris, Eduard Ponarin, and Bi Puranen. 2014. "World Values Survey Wave 5 (2005-2009)." *World Values Survey.* Retrieved March 26, 2023 (https://www.worldvaluessurvey.org/WVSDocumentationWV6.jsp).
